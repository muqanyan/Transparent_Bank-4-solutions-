1. Модификации:

Многократное общение:
    - Модифицируйте клиентский код так, чтобы клиент мог отправлять несколько сообщений подряд, не отключаясь после отправки каждого сообщения. Сервер должен обрабатывать эти сообщения и выводить их в терминал по мере получения.

Параллельное обслуживание нескольких клиентов:
    - Измените серверный код таким образом, чтобы он мог обслуживать несколько клиентов одновременно.
    - Подумайте о синхронизации доступа к общим ресурсам (например, общий выводной поток для записи в терминал) при одновременном обслуживании нескольких клиентов.

-------------------

2. Задача: Простой HTTP-клиент

Ваша задача - написать программу на C++, которая выполняет простой HTTP-запрос к веб-серверу "https://www.ysu.am/", получает ответ и сохраняет его в файл.

Шаги выполнения:
 - Создайте строку, содержащую HTTP-запрос (например, GET-запрос к определенному URL-адресу).
 - Используя сокеты, установите соединение с указанным веб-сервером.
 - Отправьте HTTP-запрос на сервер с помощью сокета.
 - Получите ответ от сервера и сохраните его в строку или буфер.
 - Выведите ответ на стандартный вывод и сохраните его в файл с именем "ysu.html".
 - Обработайте возможные ошибки, которые могут возникнуть в процессе соединения и обмена данными.
 - Завершите соединение с сервером и закройте сокет.

Сайт ysu.am выбран не случайно. Не смотря на то что у него протокол https, ему получается отправить обычный http запрос и получить ответ. Я пробовал с rau.am но там нужен именно https запрос, отправка https запроса в ручную чуть сложнее и включает в себя шифрование придется мучатся с openssl. 

Нам нужен именно http запрос с портом "80"
